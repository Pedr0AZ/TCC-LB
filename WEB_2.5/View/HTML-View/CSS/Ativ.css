/* Aqui estará a formatação das atividades */
/* Pode ser que isso se aplique apenas a uma certa parte das
atividades, já que não se sabe ao certo como elas serão feitas


Por enquanto, colarei o que havia sido feito pelo Victhor anteriormente, "Ativ1" */


body {
  font-family: Cocogoose;
  /* Define a fonte padrão para o corpo da página como "Cocogoose". */
}

.Btn {
  display: flex;
  /* Utiliza o layout flexível para o botão. */

  align-items: center;
  /* Alinha o conteúdo do botão verticalmente ao centro. */

  justify-content: flex-start;
  /* Alinha o conteúdo do botão horizontalmente ao início. */

  width: 45px;
  /* Define a largura inicial do botão. */
  
  height: 45px;
  /* Define a altura inicial do botão. */

  border: none;
  /* Remove a borda padrão do botão. */

  border-radius: 50%;
  /* Torna o botão circular. */

  cursor: pointer;
  /* Define o cursor como uma mãozinha ao passar o mouse sobre o botão. */

  position: relative;
  /* Define a posição relativa para o botão, permitindo o posicionamento absoluto de elementos internos. */

  overflow: hidden;
  /* Oculta qualquer conteúdo que ultrapasse os limites do botão. */

  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */

  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.199);
  /* Adiciona uma sombra ao botão para dar um efeito de profundidade. */

  background-color: #166ff5;
  /* Define a cor de fundo do botão . */
}

.sign {
  width: 100%;
  /* Define a largura da área de ícone do botão. */

  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */

  display: flex;
  /* Utiliza o layout flexível para a área de ícone. */

  align-items: center;
  /* Alinha o ícone verticalmente ao centro. */

  justify-content: center;
  /* Alinha o ícone horizontalmente ao centro. */
}

.sign svg {
  width: 20px;
  /* Define a largura dos ícones SVG dentro da área de ícone. */
}

.sign svg path {
  fill: white;
  /* Define a cor de preenchimento do caminho do ícone SVG como branca. */
}

.text {
  position: absolute;
  /* Posiciona o texto absolutamente dentro do botão. */

  left: 30px;
  /* Define a posição do texto a ?px da borda esquerda do botão. */

  top: 12px;
  /* Define a posição do texto a ?px do topo do botão. */

  width: 0%;
  /* Define a largura inicial do texto como ?%. */

  opacity: 0;
  /* Define a opacidade inicial do texto como ? (agora esta invisível). */

  color: white;
  /* Define a cor do texto . */
  font-size: 1.5em;
  /* Define o tamanho da fonte como ?em. */

  font-weight: 600;
  /* Define a espessura da fonte . */
  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */
}

.Btn:hover {
  width: 120px;
  /* Expande a largura do botão para ?px ao passar o mouse sobre ele. */

  border-radius: 40px;
  /* Torna as bordas do botão mais arredondadas ao passar o mouse. */

  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */
}

.Btn:hover .sign {
  width: 30%;
  /* Reduz a largura da área de ícone para ?% do botão ao passar o mouse sobre ele. */

  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */

  padding-left: 10px;
  /* Adiciona um preenchimento à esquerda na área de ícone ao passar o mouse. */
}

.Btn:hover .text {
  opacity: 1;
  /* Torna o texto visível (opacidade 1) ao passar o mouse sobre o botão. */

  width: 70%;
  /* Expande a largura do texto para ?% do botão ao passar o mouse sobre ele. */

  transition-duration: .3s;
  /* Define a duração da transição para ? segundos. */

  padding-right: 10px;
  /* Adiciona um preenchimento à direita do texto ao passar o mouse. */
}

.Btn:active {
  transform: translate(2px, 2px);
  /* Move o botão ?px para baixo e para a direita quando clicado, dando um efeito de clique. */
}

.card {
  left: 10%;
  /* Posiciona o cartão a ?% do lado esquerdo do contêiner pai. */

  overflow: hidden;
  /* Oculta qualquer conteúdo que ultrapasse os limites do cartão. */

  position: relative;
  /* Define a posição relativa para permitir o posicionamento absoluto dos elementos . */

  background-color: #ffffff;
  /* Define a cor de fundo do cartão . */

  text-align: left;
  /* Alinha o texto no cartão à esquerda. */

  border-radius: 0.5rem;
  /* Define bordas arredondadas com raio de ?rem. */
  
  max-width: 1000px;
  /* Define a largura máxima do cartão */

  height: 500px;
  /* Define a altura do cartão. */

  box-shadow: 0 20px 25px 1000px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  /* Adiciona uma sombra ao cartão para criar um efeito de profundidade. A sombra é ampla e difusa. */
}

.header {
  padding: 1.25rem 1rem 1rem 1rem;
  /* Adiciona preenchimento ao redor do cabeçalho do cartão. ?rem no topo, ?rem nas laterais e ?rem na parte inferior. */

  background-color: #ffffff;
  /* Define a cor de fundo do cabeçalho. */
}

.content {
  margin-top: 0.75rem;
  /* Adiciona uma margem superior de ?rem ao conteúdo do cartão. */

  text-align: center;
  /* Alinha o texto no centro do conteúdo do cartão. */
}

.title {
  color: #111827;
  /* Define a cor do texto do título 
  . */
  font-size: 1rem;
  /* Define o tamanho da fonte do título como ?rem. */

  font-weight: 600;
  /* Define a espessura da fonte do título . */

  line-height: 1.5rem;
  /* Define a altura da linha do título como ?rem para melhor legibilidade. */
}

.actions {
  margin: 0.75rem 1rem;
  /* Adiciona uma margem ao redor das ações do cartão: ?rem em cima e embaixo, ?rem nas laterais. */

  background-color: #F9FAFB;
  /* Define a cor de fundo das ações . */
}

.imageA {
  border: #111827;
  /* Define a cor da borda da imagem . */
}



.direitador {
  margin-left: 1010px;
  /* Define uma margem à esquerda de ? pixels para o elemento com a classe "direitador". Isso pode ser usado para posicionar o elemento em relação ao seu contêiner . */
}

.buttonC {
  appearance: button;
  /* Remove a aparência padrão do botão para que ele possa ser estilizado com CSS. */

  background-color: #1899D6;
  /* Define a cor de fundo do botão  */

  border: solid transparent;
  /* Define a borda do botão como transparente e sólida, permitindo que o estilo da borda seja aplicado apenas com a cor e largura desejadas. */

  border-radius: 16px;
  /* Define o raio da borda de pixels, arredondando os cantos do botão. */

  border-width: 0 0 4px;
  /* Define a largura da borda apenas na parte inferior do botão como ? pixels. */

  box-sizing: border-box;
  /* Inclui o padding e a borda no cálculo da largura e altura do botão. */

  color: #FFFFFF;
  /* Define a cor do texto no botão  */

  cursor: pointer;
  /* Define o cursor como uma mão quando o botão é sobrevoado, indicando que é clicável. */

  display: inline-block;
  /* Exibe o botão como um bloco em linha, permitindo que ele se ajuste ao conteúdo e mantenha o layout em linha com outros elementos. */

  font-size: 15px;
  /* Define o tamanho da fonte do texto no botão como ? pixels. */

  font-weight: 700;
  /* Define o peso da fonte. */
  letter-spacing: .8px;
  /* Define o espaçamento entre letras como ? pixels para melhorar a legibilidade. */

  line-height: 20px;
  /* Define a altura da linha como ? pixels para ajustar o espaçamento vertical do texto dentro do botão. */

  margin: 0;
  /* Remove a margem padrão ao redor do botão. */

  outline: none;
  /* Remove o contorno padrão que aparece ao redor do botão quando ele é focado. */

  overflow: visible;
  /* Permite que o conteúdo do botão que excede seu tamanho seja visível. */

  padding: 13px 19px;
  /* Define o preenchimento interno do botão: ?pixels em cima e embaixo, ?pixels nas laterais. */

  text-align: center;
  /* Alinha o texto no centro do botão. */

  text-transform: uppercase;
  /* Transforma o texto do botão em maiúsculas. */

  touch-action: manipulation;
  /* Define a ação de toque como manipulação para melhorar a performance em dispositivos móveis. */

  transform: translateZ(0);
  /* Força a criação de uma nova camada de renderização para melhorar a performance de transições e animações. */

  transition: filter .2s;
  /* Define uma transição de ? segundos para o filtro, o que permite um efeito de transição suave. */

  user-select: none;
  /* Impede que o texto do botão seja selecionado pelo usuário. */

  -webkit-user-select: none;
  /* Impede a seleção do texto em navegadores WebKit. */

  vertical-align: middle;
  /* Alinha verticalmente o botão no meio em relação aos elementos de linha. */

  white-space: nowrap;
  /* Impede que o texto dentro do botão seja quebrado em várias linhas. */
}

.buttonC:after {
  background-clip: padding-box;
  /* Faz com que o fundo seja aplicado apenas ao conteúdo e padding, excluindo a borda. */

  background-color: #1CB0F6;
  /* Define a cor de fundo do pseudo-elemento :after com alguma cor. */

  border: solid transparent;
  /* Define a borda do pseudo-elemento :after como transparente e sólida. */

  border-radius: 16px;
  /* Define o raio da borda como ? pixels, arredondando os cantos do pseudo-elemento. */

  border-width: 0 0 4px;
  /* Define a largura da borda apenas na parte inferior do pseudo-elemento como ? pixels. */

  bottom: -4px;
  /* Posiciona o pseudo-elemento :after a ? pixels abaixo da borda inferior do botão. */

  content: "";
  /* Define o conteúdo do pseudo-elemento :after como vazio. */

  left: 0;
  /* Alinha o pseudo-elemento :after à esquerda do botão. */

  position: absolute;
  /* Posiciona o pseudo-elemento :after de forma absoluta em relação ao botão. */

  right: 0;
  /* Alinha o pseudo-elemento :after à direita do botão. */

  top: 0;
  /* Alinha o pseudo-elemento :after ao topo do botão. */

  z-index: -1;
  /* Define o índice z para ?, posicionando o pseudo-elemento atrás do conteúdo do botão. */
}

.buttonC:main, .buttonC:focus {
  user-select: auto;
  /* Permite a seleção do texto quando o botão está focado ou em modo principal. */
}

.buttonC:hover:not(:disabled) {
  filter: brightness(1.1);
  /* Aplica um efeito de brilho de ?% quando o botão é sobrevoado e não está desativado. */
}

.buttonC:disabled {
  cursor: auto;
  /* Altera o cursor para o padrão quando o botão está desativado, indicando que não pode ser clicado. */
}

.buttonC:active:after {
  border-width: 0 0 0px;
  /* Remove a largura da borda inferior do pseudo-elemento :after quando o botão é pressionado. */
}

.buttonC:active {
  padding-bottom: 10px;
  /* Reduz o preenchimento inferior do botão quando ele está pressionado, criando um efeito de "afundamento". */
}

@font-face {
  font-family: "Cocogoose";
  src: url('FONTES/Cocogoose.ttf') format('truetype');
  /* Define uma fonte personalizada chamada Cocogoose */
}